Program -> Statement Statements $
Statements -> Statement Statements
Statements -> EPSILON
Statement -> DeclarationStatement
Statement -> ExpressionStatement
Statement -> SelectionStatement
Statement -> IterationStatement
DeclarationStatement -> Type Identifier DeclarationStatementPrime
DeclarationStatement -> ListDeclarationStatement
DeclarationStatementPrime -> FormalParameterList Block end Identifier
DeclarationStatementPrime -> is Expression
DeclarationStatementPrime -> EPSILON
ListDeclarationStatement -> list of Type Identifier is ParameterList
FormalParameter -> Type Identifier
FormalParameterList -> ( FormalParameterListBody )
FormalParameterListBody -> FormalParameter FormalParameterListBodyPrime
FormalParameterListBody -> EPSILON
FormalParameterListBodyPrime -> , FormalParameterListBody
FormalParameterListBodyPrime -> EPSILON
Expression -> AssignmentExpressionPrime AssignmentExpression
AssignmentExpression -> is AssignmentExpressionPrime AssignmentExpression
AssignmentExpression -> EPSILON
AssignmentExpressionPrime -> NotExpressionPrime NotExpression
NotExpression -> not NotExpressionPrime NotExpression
NotExpression -> EPSILON
NotExpressionPrime -> OrExpressionPrime OrExpression
OrExpression -> or OrExpressionPrime OrExpression
OrExpression -> EPSILON
OrExpressionPrime -> AndExpressionPrime AndExpression
AndExpression -> and AndExpressionPrime AndExpression
AndExpression -> EPSILON
AndExpressionPrime -> EqualityExpressionPrime EqualityExpression
EqualityExpression -> equals EqualityExpressionPrime EqualityExpression
EqualityExpression -> EPSILON
EqualityExpressionPrime -> RelationalExpressionPrime RelationalExpression
RelationalExpression -> below RelationalExpressionPrime RelationalExpression
RelationalExpression -> above RelationalExpressionPrime RelationalExpression
RelationalExpression -> EPSILON
RelationalExpressionPrime -> AdditiveExpressionPrime AdditiveExpression
AdditiveExpression -> + AdditiveExpressionPrime AdditiveExpression
AdditiveExpression -> - AdditiveExpressionPrime AdditiveExpression
AdditiveExpression -> EPSILON
AdditiveExpressionPrime -> PrimaryExpression MultiplicativeExpression
MultiplicativeExpression -> * PrimaryExpression MultiplicativeExpression
MultiplicativeExpression -> / PrimaryExpression MultiplicativeExpression
MultiplicativeExpression -> EPSILON
PrimaryExpression -> Identifier IdentifierAppendantOptional
PrimaryExpression -> IntegerLiteral
PrimaryExpression -> FloatingPointLiteral
PrimaryExpression -> StringLiteral
PrimaryExpression -> BooleanLiteral
PrimaryExpression -> ( Expression )
ExpressionStatement -> Identifier ExpressionStatementPrime
ExpressionStatementPrime -> ExpressionStatementPrimePrime is Expression
ExpressionStatementPrime -> ParameterList
ExpressionStatementPrimePrime -> .Identifier
ExpressionStatementPrimePrime -> EPSILON
Parameter -> Identifier
Parameter -> IntegerLiteral
Parameter -> FloatingPointLiteral
Parameter -> StringLiteral
Parameter -> BooleanLiteral
IdentifierAppendantOptional -> ParameterList
IdentifierAppendantOptional -> [ IntegerLiteral ]
IdentifierAppendantOptional -> EPSILON
ParameterList -> ( ParameterListBody )
ParameterListBody -> Parameter ParameterListBodyPrime
ParameterListBody -> EPSILON
ParameterListBodyPrime -> , ParameterListBody
ParameterListBodyPrime -> EPSILON
SelectionStatement -> if Condition Block SelectionStatementPrime
SelectionStatementPrime -> else Block end else if
SelectionStatementPrime -> end if
IterationStatement -> until Condition Block end until
IterationStatement -> foreach ( FormalParameter in Parameter ) Block end foreach
Condition -> ( Expression )
Block -> Statements
Type -> text
Type -> number
Type -> fraction
Type -> character
Type -> boolean
Type -> void
Type -> StructSpecifier
StructSpecifier -> struct Identifier StructSpecifierPrime
StructSpecifierPrime -> StructDeclaration end Identifier
StructSpecifierPrime -> EPSILON
StructDeclaration -> DeclarationStatement StructDeclaration
StructDeclaration -> EPSILON